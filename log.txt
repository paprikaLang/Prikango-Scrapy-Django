1.scrapy 是基于twisted的框架,异步IO性能好, 便于扩展,内置很多功能,CSS和xpath; requests和beautifulsoup是库.
2.create virtualenv: pipenv install scrapy
3.reset interpreter: pipenv shell -> which python3 -> pycharm add local interpreter
4.pipenv shell -> scrapy startproject xxx -> cd xxx & scrapy genspider jobbole blog.jobbole.com

Created spider 'jobbole' using template 'basic' in module:
BoleSpider.spiders.jobbole

5. 1)scrapy.cmdline.excute 调试爬虫结果
from scrapy.cmdline import execute
execute(["scrapy", "crawl", "jobbole"])
   2)scrapy shell http://blog.jobbole.com/110287/ 终端调试
2019-01-01 16:24:58 [scrapy.extensions.telnet] DEBUG: Telnet console listening on 127.0.0.1:6023
2019-01-01 16:24:58 [scrapy.core.engine] INFO: Spider opened
2019-01-01 16:24:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/110287/> (referer: None)
[s] Available Scrapy objects:
[s]   scrapy     scrapy module (contains scrapy.Request, scrapy.Selector, etc)
[s]   crawler    <scrapy.crawler.Crawler object at 0x10e1fca90>
[s]   item       {}
[s]   request    <GET http://blog.jobbole.com/110287/>
[s]   response   <200 http://blog.jobbole.com/110287/>
[s]   settings   <scrapy.settings.Settings object at 0x10f1ec710>
[s]   spider     <DefaultSpider 'default' at 0x10f4b2c18>
[s] Useful shortcuts:
[s]   fetch(url[, redirect=True]) Fetch URL and update local objects (by default, redirects are followed)
[s]   fetch(req)                  Fetch a scrapy.Request and update local objects
[s]   shelp()           Shell help (print this help)
[s]   view(response)    View response in a browser
>>> result = response.xpath('//*[@id="post-110287"]/div[1]/h1/text()');
>>> result.extract()[0];
result看做 monad 可以继续xpath分析查询, extract之后解包得值但已经不是Selector了

6. extract_first() 为空时有默认值 不会像 extract()[0] 抛错

7. [el for el in tags if not el ...]  filter

8. "//span[contains(@class, 'bookmark-btn')]/text()"  span 的 class 不唯一时, contains

9. yield Request(url=parse.urljoin(response.url, post_url), callback=self.parse_post) yield阻塞,待循环当前页面20个post_url结束后, 才会执行下面的next_page再爬取20个post_url.

10. items

不同于普通的model, items可以将属性yield给pipelines:

yield post_item

11. settings.py 配置 scrapy 图片下载

ITEM_PIPELINES = {
   'BoleSpider.pipelines.BolespiderPipeline': 300,
   'scrapy.pipelines.images.ImagesPipeline': 1,  //数字低的在管道的最开端
}

IMAGES_URLS_FIELD = "preview_img"  //要处理的图片的字段
project_dir = os.path.abspath(os.path.dirname(__file__)) //相对路径
IMAGES_STORE = os.path.join(project_dir, 'images')  // 保存图片的文件夹


12. hashlib.md5  Python3以后所有的字符都是Unicode, 要encode("utf-8")之后才能被MD5

Unicode-object must be encoded before hashing




